(this["webpackJsonpweapon-viewer"]=this["webpackJsonpweapon-viewer"]||[]).push([[0],{31:function(t,e,n){t.exports=n(44)},36:function(t,e,n){},37:function(t,e,n){},42:function(t,e,n){},43:function(t,e,n){},44:function(t,e,n){"use strict";n.r(e);var a=n(6),r=n.n(a),i=n(23),o=n.n(i),s=n(28),c=n(13),u=n(1),l=n(3),h=n(5),m=n(2),v=n(4),d=function(t){function e(){return Object(u.a)(this,e),Object(h.a)(this,Object(m.a)(e).apply(this,arguments))}return Object(v.a)(e,t),Object(l.a)(e,[{key:"render",value:function(){return r.a.createElement(a.Fragment,null,r.a.createElement("main",null,this.props.children))}}]),e}(a.Component),p=n(8),g=n(24),f=(n(36),n(0)),b=n(25),x=n(26),w=n(27),M=function(){var t=new f.mb(90,1,.1,10),e=new f.Bb,n=new f.Y(new f.f(1,1,1),function(){var t=new f.Cb({uniforms:{equirectangularMap:{value:null}},vertexShader:"varying vec3 localPosition;\n\t\t\t\t\n\t\t\t\tvoid main() {\n\t\t\t\t\tlocalPosition = position;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec3 localPosition;\n\t\t\t\tuniform sampler2D equirectangularMap;\n\t\t\t\t\n\t\t\t\tvec2 EquirectangularSampleUV(vec3 v) {\n\t\t\t\t\tvec2 uv = vec2(atan(v.z, v.x), asin(v.y));\n\t\t\t\t\tuv *= vec2(0.1591, 0.3183); // inverse atan\n\t\t\t\t\tuv += 0.5;\n\t\t\t\t\treturn uv;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 uv = EquirectangularSampleUV(normalize(localPosition));\n\t\t\t\t\tgl_FragColor = texture2D(equirectangularMap, uv);\n\t\t\t\t}",blending:f.hb});return t.type="EquirectangularToCubeGenerator",t}());n.material.side=f.c,e.add(n);var a=function(t,e){e=e||{},this.sourceTexture=t,this.resolution=e.resolution||512,this.views=[{t:[1,0,0],u:[0,-1,0]},{t:[-1,0,0],u:[0,-1,0]},{t:[0,1,0],u:[0,0,1]},{t:[0,-1,0],u:[0,0,-1]},{t:[0,0,1],u:[0,-1,0]},{t:[0,0,-1],u:[0,-1,0]}];var n={format:e.format||this.sourceTexture.format,magFilter:this.sourceTexture.magFilter,minFilter:this.sourceTexture.minFilter,type:e.type||this.sourceTexture.type,generateMipmaps:this.sourceTexture.generateMipmaps,anisotropy:this.sourceTexture.anisotropy,encoding:this.sourceTexture.encoding};this.renderTarget=new f.Zb(this.resolution,this.resolution,n)};return a.prototype={constructor:a,update:function(a){var r=a.getRenderTarget();n.material.uniforms.equirectangularMap.value=this.sourceTexture;for(var i=0;i<6;i++){var o=this.views[i];t.position.set(0,0,0),t.up.set(o.u[0],o.u[1],o.u[2]),t.lookAt(o.t[0],o.t[1],o.t[2]),a.setRenderTarget(this.renderTarget,i),a.clear(),a.render(e,t)}return a.setRenderTarget(r),this.renderTarget.texture},dispose:function(){this.renderTarget.dispose()}},a}(),T=function(){var t=new f.kb,e=new f.Bb,n=function(){var t=new f.Cb({uniforms:{faceIndex:{value:0},mapSize:{value:0},envMap:{value:null},testColor:{value:new f.Ub(1,1,1)}},vertexShader:"precision highp float;        varying vec2 vUv;        void main() {          vUv = uv;          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );        }",fragmentShader:"precision highp float;        varying vec2 vUv;        uniform samplerCube envMap;        uniform float mapSize;        uniform vec3 testColor;        uniform int faceIndex;                void main() {          vec3 sampleDirection;          vec2 uv = vUv;          uv = uv * 2.0 - 1.0;          uv.y *= -1.0;          if(faceIndex == 0) {            sampleDirection = normalize(vec3(1.0, uv.y, -uv.x));          } else if(faceIndex == 1) {            sampleDirection = normalize(vec3(uv.x, 1.0, uv.y));          } else if(faceIndex == 2) {            sampleDirection = normalize(vec3(uv.x, uv.y, 1.0));          } else if(faceIndex == 3) {            sampleDirection = normalize(vec3(-1.0, uv.y, uv.x));          } else if(faceIndex == 4) {            sampleDirection = normalize(vec3(uv.x, -1.0, -uv.y));          } else {            sampleDirection = normalize(vec3(-uv.x, uv.y, -1.0));          }          vec4 color = envMapTexelToLinear( textureCube( envMap, sampleDirection ) );          gl_FragColor = linearToOutputTexel( color );        }",blending:f.hb});return t.type="PMREMCubeUVPacker",t}(),a=function(t){this.cubeLods=t;var e=4*t[0].width,a=t[0].texture,r={format:a.format,magFilter:a.magFilter,minFilter:a.minFilter,type:a.type,generateMipmaps:a.generateMipmaps,anisotropy:a.anisotropy,encoding:a.encoding===f.wb?f.zb:a.encoding};r.encoding===f.zb&&(r.magFilter=f.L,r.minFilter=f.L),this.CubeUVRenderTarget=new f.Yb(e,e,r),this.CubeUVRenderTarget.texture.name="PMREMCubeUVPacker.cubeUv",this.CubeUVRenderTarget.texture.mapping=f.n,this.objects=[];var i=new f.nb(1,1),o=[];o.push(new f.Tb(0,0)),o.push(new f.Tb(1,0)),o.push(new f.Tb(2,0)),o.push(new f.Tb(0,1)),o.push(new f.Tb(1,1)),o.push(new f.Tb(2,1));var s=e;e=t[0].width;var c=0,u=4;this.numLods=Math.log(t[0].width)/Math.log(2)-2;for(var l=0;l<this.numLods;l++){var h=.5*(s-s/u);e>16&&(u*=2);for(var m=e>16?6:1,v=0,d=0,p=e,g=0;g<m;g++){for(var b=0;b<6;b++){var x=n.clone();x.uniforms.envMap.value=this.cubeLods[l].texture,x.envMap=this.cubeLods[l].texture,x.uniforms.faceIndex.value=b,x.uniforms.mapSize.value=p;var w=new f.Y(i,x);w.position.x=o[b].x*p-h+v,w.position.y=o[b].y*p-h+c+d,w.material.side=f.c,w.scale.setScalar(p),this.objects.push(w)}d+=1.75*p,v+=1.25*p,p/=2}c+=2*e,e>16&&(e/=2)}};return a.prototype={constructor:a,update:function(n){var a=4*this.cubeLods[0].width;t.left=.5*-a,t.right=.5*a,t.top=.5*-a,t.bottom=.5*a,t.near=0,t.far=1,t.updateProjectionMatrix();for(var r=0;r<this.objects.length;r++)e.add(this.objects[r]);var i=n.gammaInput,o=n.gammaOutput,s=n.toneMapping,c=n.toneMappingExposure,u=n.getRenderTarget();n.gammaInput=!1,n.gammaOutput=!1,n.toneMapping=f.P,n.toneMappingExposure=1,n.setRenderTarget(this.CubeUVRenderTarget),n.render(e,t),n.setRenderTarget(u),n.toneMapping=s,n.toneMappingExposure=c,n.gammaInput=i,n.gammaOutput=o;for(r=0;r<this.objects.length;r++)e.remove(this.objects[r])},dispose:function(){for(var t=0,e=this.objects.length;t<e;t++)this.objects[t].material.dispose();this.objects[0].geometry.dispose()}},a}(),y=function(){var t=function(){var t=new f.Cb({defines:{SAMPLES_PER_LEVEL:20},uniforms:{faceIndex:{value:0},roughness:{value:.5},mapSize:{value:.5},envMap:{value:null},tFlip:{value:-1}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform int faceIndex;\n\t\t\t\tuniform float roughness;\n\t\t\t\tuniform samplerCube envMap;\n\t\t\t\tuniform float mapSize;\n\t\t\t\tuniform float tFlip;\n\t\t\t\t\n\t\t\t\tfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\t\t\t\t\tfloat a = ggxRoughness + 0.0001;\n\t\t\t\t\ta *= a;\n\t\t\t\t\treturn ( 2.0 / a - 2.0 );\n\t\t\t\t}\n\t\t\t\tvec3 ImportanceSamplePhong(vec2 uv, mat3 vecSpace, float specPow) {\n\t\t\t\t\tfloat phi = uv.y * 2.0 * PI;\n\t\t\t\t\tfloat cosTheta = pow(1.0 - uv.x, 1.0 / (specPow + 1.0));\n\t\t\t\t\tfloat sinTheta = sqrt(1.0 - cosTheta * cosTheta);\n\t\t\t\t\tvec3 sampleDir = vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\n\t\t\t\t\treturn vecSpace * sampleDir;\n\t\t\t\t}\n\t\t\t\tvec3 ImportanceSampleGGX( vec2 uv, mat3 vecSpace, float Roughness )\n\t\t\t\t{\n\t\t\t\t\tfloat a = Roughness * Roughness;\n\t\t\t\t\tfloat Phi = 2.0 * PI * uv.x;\n\t\t\t\t\tfloat CosTheta = sqrt( (1.0 - uv.y) / ( 1.0 + (a*a - 1.0) * uv.y ) );\n\t\t\t\t\tfloat SinTheta = sqrt( 1.0 - CosTheta * CosTheta );\n\t\t\t\t\treturn vecSpace * vec3(SinTheta * cos( Phi ), SinTheta * sin( Phi ), CosTheta);\n\t\t\t\t}\n\t\t\t\tmat3 matrixFromVector(vec3 n) {\n\t\t\t\t\tfloat a = 1.0 / (1.0 + n.z);\n\t\t\t\t\tfloat b = -n.x * n.y * a;\n\t\t\t\t\tvec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\n\t\t\t\t\tvec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\n\t\t\t\t\treturn mat3(b1, b2, n);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvec4 testColorMap(float Roughness) {\n\t\t\t\t\tvec4 color;\n\t\t\t\t\tif(faceIndex == 0)\n\t\t\t\t\t\tcolor = vec4(1.0,0.0,0.0,1.0);\n\t\t\t\t\telse if(faceIndex == 1)\n\t\t\t\t\t\tcolor = vec4(0.0,1.0,0.0,1.0);\n\t\t\t\t\telse if(faceIndex == 2)\n\t\t\t\t\t\tcolor = vec4(0.0,0.0,1.0,1.0);\n\t\t\t\t\telse if(faceIndex == 3)\n\t\t\t\t\t\tcolor = vec4(1.0,1.0,0.0,1.0);\n\t\t\t\t\telse if(faceIndex == 4)\n\t\t\t\t\t\tcolor = vec4(0.0,1.0,1.0,1.0);\n\t\t\t\t\telse\n\t\t\t\t\t\tcolor = vec4(1.0,0.0,1.0,1.0);\n\t\t\t\t\tcolor *= ( 1.0 - Roughness );\n\t\t\t\t\treturn color;\n\t\t\t\t}\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec3 sampleDirection;\n\t\t\t\t\tvec2 uv = vUv*2.0 - 1.0;\n\t\t\t\t\tfloat offset = -1.0/mapSize;\n\t\t\t\t\tconst float a = -1.0;\n\t\t\t\t\tconst float b = 1.0;\n\t\t\t\t\tfloat c = -1.0 + offset;\n\t\t\t\t\tfloat d = 1.0 - offset;\n\t\t\t\t\tfloat bminusa = b - a;\n\t\t\t\t\tuv.x = (uv.x - a)/bminusa * d - (uv.x - b)/bminusa * c;\n\t\t\t\t\tuv.y = (uv.y - a)/bminusa * d - (uv.y - b)/bminusa * c;\n\t\t\t\t\tif (faceIndex==0) {\n\t\t\t\t\t\tsampleDirection = vec3(1.0, -uv.y, -uv.x);\n\t\t\t\t\t} else if (faceIndex==1) {\n\t\t\t\t\t\tsampleDirection = vec3(-1.0, -uv.y, uv.x);\n\t\t\t\t\t} else if (faceIndex==2) {\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, 1.0, uv.y);\n\t\t\t\t\t} else if (faceIndex==3) {\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, -1.0, -uv.y);\n\t\t\t\t\t} else if (faceIndex==4) {\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, -uv.y, 1.0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsampleDirection = vec3(-uv.x, -uv.y, -1.0);\n\t\t\t\t\t}\n\t\t\t\t\tvec3 correctedDirection = vec3( tFlip * sampleDirection.x, sampleDirection.yz );\n\t\t\t\t\tmat3 vecSpace = matrixFromVector( normalize( correctedDirection ) );\n\t\t\t\t\tvec3 rgbColor = vec3(0.0);\n\t\t\t\t\tconst int NumSamples = SAMPLES_PER_LEVEL;\n\t\t\t\t\tvec3 vect;\n\t\t\t\t\tfloat weight = 0.0;\n\t\t\t\t\tfor( int i = 0; i < NumSamples; i ++ ) {\n\t\t\t\t\t\tfloat sini = sin(float(i));\n\t\t\t\t\t\tfloat cosi = cos(float(i));\n\t\t\t\t\t\tfloat r = rand(vec2(sini, cosi));\n\t\t\t\t\t\tvect = ImportanceSampleGGX(vec2(float(i) / float(NumSamples), r), vecSpace, roughness);\n\t\t\t\t\t\tfloat dotProd = dot(vect, normalize(sampleDirection));\n\t\t\t\t\t\tweight += dotProd;\n\t\t\t\t\t\tvec3 color = envMapTexelToLinear(textureCube(envMap, vect)).rgb;\n\t\t\t\t\t\trgbColor.rgb += color;\n\t\t\t\t\t}\n\t\t\t\t\trgbColor /= float(NumSamples);\n\t\t\t\t\t//rgbColor = testColorMap( roughness ).rgb;\n\t\t\t\t\tgl_FragColor = linearToOutputTexel( vec4( rgbColor, 1.0 ) );\n\t\t\t\t}",blending:f.hb});return t.type="PMREMGenerator",t}(),e=new f.kb(-1,1,1,-1,0,1e3),n=new f.Bb,a=new f.Y(new f.nb(2,2,0),t);a.material.side=f.t,n.add(a),n.add(e);var r=function(t,e,n){this.sourceTexture=t,this.resolution=void 0!==n?n:256,this.samplesPerLevel=void 0!==e?e:32;var a=this.sourceTexture.encoding===f.K||this.sourceTexture.encoding===f.y||this.sourceTexture.encoding===f.bc;this.sourceTexture.minFilter=a?f.L:f.eb,this.sourceTexture.magFilter=a?f.L:f.eb,this.sourceTexture.generateMipmaps=this.sourceTexture.generateMipmaps&&a,this.cubeLods=[];var r=this.resolution,i={format:this.sourceTexture.format,magFilter:this.sourceTexture.magFilter,minFilter:this.sourceTexture.minFilter,type:this.sourceTexture.type,generateMipmaps:this.sourceTexture.generateMipmaps,anisotropy:this.sourceTexture.anisotropy,encoding:this.sourceTexture.encoding};this.numLods=Math.log(r)/Math.log(2)-2;for(var o=0;o<this.numLods;o++){var s=new f.Zb(r,r,i);s.texture.name="PMREMGenerator.cube"+o,this.cubeLods.push(s),r=Math.max(16,r/2)}};return r.prototype={constructor:r,update:function(e){var n=this.sourceTexture.isCubeTexture?-1:1;t.defines.SAMPLES_PER_LEVEL=this.samplesPerLevel,t.uniforms.faceIndex.value=0,t.uniforms.envMap.value=this.sourceTexture,t.envMap=this.sourceTexture,t.needsUpdate=!0;var a=e.gammaInput,r=e.gammaOutput,i=e.toneMapping,o=e.toneMappingExposure,s=e.getRenderTarget();e.toneMapping=f.P,e.toneMappingExposure=1,e.gammaInput=!1,e.gammaOutput=!1;for(var c=0;c<this.numLods;c++){var u=c/(this.numLods-1);t.uniforms.roughness.value=.9*u,t.uniforms.tFlip.value=0==c?n:1;var l=this.cubeLods[c].width;t.uniforms.mapSize.value=l,this.renderToCubeMapTarget(e,this.cubeLods[c]),c<5&&(t.uniforms.envMap.value=this.cubeLods[c].texture)}e.setRenderTarget(s),e.toneMapping=i,e.toneMappingExposure=o,e.gammaInput=a,e.gammaOutput=r},renderToCubeMapTarget:function(t,e){for(var n=0;n<6;n++)this.renderToCubeMapTargetFace(t,e,n)},renderToCubeMapTargetFace:function(a,r,i){t.uniforms.faceIndex.value=i,a.setRenderTarget(r,i),a.clear(),a.render(n,e)},dispose:function(){for(var t=0,e=this.cubeLods.length;t<e;t++)this.cubeLods[t].dispose()}},r}(),S=n(11),C=function(t){function e(t){var n;return Object(u.a)(this,e),(n=Object(h.a)(this,Object(m.a)(e).call(this,t))).updatePostprocessing=function(){this.composer.render()},n.width=1024,n.height=512,n.loadEnvMap=n.loadEnvMap.bind(Object(p.a)(n)),n.loadModel=n.loadModel.bind(Object(p.a)(n)),n}return Object(v.a)(e,t),Object(l.a)(e,[{key:"render",value:function(){var t=this;return r.a.createElement("div",{className:"mainScene",ref:function(e){t.mainScene=e}})}},{key:"componentDidMount",value:function(){var t=this;this.width=this.mainScene.clientWidth,this.height=this.mainScene.clientHeight,this.timer=0,this.clock=new f.j,this.loadingManager=new f.S,this.loadingManager.onStart=function(t,e,n){document.getElementById("loading-container").style.display="block"},this.loadingManager.onLoad=function(){console.log("Loading complete!"),document.getElementById("loading-container").style.display="none"},this.loadingManager.onProgress=function(t,e,n){},this.loadingManager.onError=function(t){},this.textureLoader=new f.Lb(this.loadingManager),this.cubeTextureLoader=new f.m(this.loadingManager),this.gltfLoader=new b.a(this.loadingManager),this.rgbeLoader=new w.a(this.loadingManager),this.scene=new f.Bb,this.scene.background=new f.k(15658734),this.camera=new f.mb(50,this.width/this.height,.001,1e3),this.camera.position.set(-.5,.5,.5),this.renderer=new f.ac({antialias:!0,alpha:!1}),this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.autoClear=!1,this.renderer.gammaOutput=!0,this.renderer.gammaFactor=3.2,this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=f.lb,this.mainScene.appendChild(this.renderer.domElement),this.cameraCtrl=new x.a(this.camera,this.renderer.domElement),this.cameraCtrl.enableDamping=!0,this.cameraCtrl.screenSpacePanning=!0,this.cameraCtrl.dampingFactor=.12,this.cameraCtrl.minDistance=.1,this.cameraCtrl.maxDistance=10,this.cameraCtrl.rotateSpeed=.5,this.cameraCtrl.panSpeed=.5,this.cameraCtrl.target=new f.Ub(0,.1,0),this.resizeObserver=new g.a((function(e){var n=e[0].contentRect,a=n.width,r=n.height;t.width=a,t.height=r,t.composer&&t.composer.setSize(t.width,t.height),t.camera.aspect=t.width/t.height,t.camera.updateProjectionMatrix()})),this.resizeObserver.observe(this.mainScene),this.rootObj=new f.jb,this.scene.add(this.rootObj);var e=new f.a(12883820,2.5);this.scene.add(e);var n=new f.s(16777215,1);n.position.set(4,3,10),n.castShadow=!0,n.shadow.camera.top=10,n.shadow.camera.bottom=-10,n.shadow.camera.left=-10,n.shadow.camera.right=10,n.shadow.camera.near=.1,n.shadow.camera.far=40,n.shadow.mapSize.width=2048,n.shadow.mapSize.height=2048,this.scene.add(n);var a=new f.s(16777215,1);a.position.set(-4,3,-10),a.castShadow=!0,a.shadow.camera.top=10,a.shadow.camera.bottom=-10,a.shadow.camera.left=-10,a.shadow.camera.right=10,a.shadow.camera.near=.1,a.shadow.camera.far=40,a.shadow.mapSize.width=2048,a.shadow.mapSize.height=2048,this.scene.add(a),this.rgbeLoader.setDataType(f.Qb).setPath("assets/textures/env/").load("industry_interior_2.hdr",this.loadEnvMap),window.mainScene=this}},{key:"loadEnvMap",value:function(t){var e=new M(t,{resolution:2048});e.update(this.renderer);var n=new y(e.renderTarget.texture);n.update(this.renderer);var a=new T(n.cubeLods);a.update(this.renderer),this.envMap=a.CubeUVRenderTarget.texture,n.dispose(),a.dispose(),this.startScene()}},{key:"startScene",value:function(){this.loadGLTF("assets/models/akm/scene.gltf"),this.initPostprocessing(),this.animate()}},{key:"loadGLTF",value:function(t){this.gltfLoader.load(t,this.loadModel)}},{key:"loadModel",value:function(t){this.gun=t.scene.children[0],this.gun.scale.set(.1,.1,.1),this.scene.remove(this.rootObj),this.rootObj=new f.jb,this.scene.add(this.rootObj),this.rootObj.add(this.gun);var e=this;this.scene.traverse((function(t){t.isMesh&&(t.material.envMap=e.envMap,t.material.envMapIntensity=3)})),this.fitCameraToObject(this.gun,3)}},{key:"fitCameraToObject",value:function(t,e){e=e||1.25;var n=new f.e;n.setFromObject(t);var a=new f.Ub;n.getCenter(a);var r=new f.Ub;n.getSize(r);var i=Math.max(r.x,r.y,r.z),o=(this.camera.fov,Math.PI,Math.abs(i/4));o*=e,this.camera.position.z=o;var s=n.min.z,c=s<0?-s+o:o-s;this.camera.far=3*c,this.camera.updateProjectionMatrix(),this.cameraCtrl?(this.cameraCtrl.target=a,this.cameraCtrl.maxDistance=2*c,this.cameraCtrl.saveState()):this.camera.lookAt(a)}},{key:"initPostprocessing",value:function(){this.composer=new S.c(this.renderer);var t=new S.g(this.scene,this.camera);this.composer.addPass(t);var e=new S.i({eskil:!1,offset:.18,darkness:.7}),n=new S.b({contrast:.01,brightness:.01}),a=new S.e({gamma:1.8}),r=new Image;r.src=S.h.areaImageDataURL;var i=new Image;i.src=S.h.searchImageDataURL;var o=new S.h(i,r),s=new S.a({intensity:.2,luminanceThreshold:.3,luminanceSmoothing:.83,resolutionScale:.5}),c=new S.f({hue:0,saturation:-.391}),u=new S.d(this.camera,s,o,e,n,a,c);u.renderToScreen=!0,this.composer.addPass(u)}},{key:"animate",value:function(){requestAnimationFrame(this.animate.bind(this)),this.timer+=this.clock.getDelta(),this.cameraCtrl.update(),this.updatePostprocessing()}},{key:"componentDidUpdate",value:function(t,e,n){}},{key:"componentWillUnmount",value:function(){this.resizeObserver.disconnect()}}]),e}(r.a.Component),L=(n(37),function(){return r.a.createElement(d,null,r.a.createElement(C,null))}),P=function(){return r.a.createElement(s.a,{basename:"/main"},r.a.createElement(c.c,null,r.a.createElement(c.a,{exact:!0,path:"/",component:L})))},E=(n(42),function(){return r.a.createElement(P,null)});Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(43);o.a.render(r.a.createElement(E,null),document.getElementById("container3D")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(t){t.unregister()}))}},[[31,1,2]]]);
//# sourceMappingURL=main.4bdab88b.chunk.js.map